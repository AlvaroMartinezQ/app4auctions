"""initial migration

Revision ID: 4e84803b6061
Revises: 
Create Date: 2022-10-19 16:53:42.006791

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "4e84803b6061"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_base_user",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("email", sa.String(length=200), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("personal_name", sa.String(length=100), nullable=False),
        sa.Column("personal_surname", sa.String(length=100), nullable=False),
        sa.Column("identification_number", sa.String(length=100), nullable=False),
        sa.Column("country", sa.String(length=100), nullable=False),
        sa.Column("address", sa.String(length=250), nullable=False),
        sa.Column("phone", sa.String(length=50), nullable=False),
        sa.Column(
            "singup_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("last_login", sa.DateTime(timezone=True), nullable=True),
        sa.Column("interests", sa.String(length=500), nullable=True),
        sa.Column("active_notifications", sa.Boolean(), nullable=True),
        sa.Column("active_account", sa.Boolean(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("identification_number"),
    )
    op.create_table(
        "market_auction",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("init_price", sa.Float(), nullable=True),
        sa.Column("price_currency", sa.String(length=10), nullable=False),
        sa.Column(
            "creation_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("finish_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("title", sa.String(length=150), nullable=False),
        sa.Column("description", sa.String(length=300), nullable=False),
        sa.Column("tags", sa.String(length=300), nullable=False),
        sa.Column("celery_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_base_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "market_wallet",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("ammount", sa.Float(), nullable=False),
        sa.Column("currency", sa.String(length=25), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_base_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "market_bid",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("offer_ammount", sa.Float(), nullable=False),
        sa.Column(
            "creation_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("auction_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["auction_id"],
            ["market_auction.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_base_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("market_bid")
    op.drop_table("market_wallet")
    op.drop_table("market_auction")
    op.drop_table("auth_base_user")
    # ### end Alembic commands ###
